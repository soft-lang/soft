nodetype,primitivetype,nodegroup,precedence,literal,literalpattern,nodepattern,prologue,epilogue,growfrom,growinto,nodeseverity
RET,void,,,,,,,,,,
SOURCE_CODE,text,,,,,,,,,,
BANG_EQ,,OPS,,!=,,,,,,,
EQ_EQ,,OPS,,==,,,,,,,
LPAREN,,LSEP,,(,,,,,,,
LBRACKET,,LSEP,,[,,,,,,,
LBRACE,,LSEP,,{,,,,,,,
BANG,,OPS,,!,,,,,,,
PERCENT,,OPS,,%,,,,,,,
ASTERISK,,OPS,,*,,,,,,,
PLUS,,OPS,,+,,,,,,,
COMMA,,OPS,,",",,,,,,,
MINUS,,OPS,,-,,,,,,,
DOT,,OPS,,.,,,,,,,
SLASH,,OPS,,/,,,,,,,
COLON,,OPS,,:,,,,,,,
LT,,OPS,,<,,,,,,,
EQ,,OPS,,=,,,,,,,
GT,,OPS,,>,,,,,,,
RPAREN,,RSEP,,),,,,,,,
RBRACKET,,RSEP,,],,,,,,,
RBRACE,,RSEP,,},,,,,,,
SEMICOLON,,SEP,,;,,,,,,,
WHITE_SPACE,,,,,(\s+),,,,,,
INTEGER,integer,VALUES,,,([0-9]+),,,,,,
IDENTIFIER,name,VALUES,,,([a-zA-Z_]+),,,,,,
IF,,,,,^(if)$,,,,IDENTIFIER,,
ELSE,,SEP,,,^(else)$,,,,IDENTIFIER,,
FUNCTION,,,,,^(fn)$,,,,IDENTIFIER,,
LET,,,,,^(let)$,,,,IDENTIFIER,,
RETURN,,SEP,,,^(return)$,,,,IDENTIFIER,,
BOOLEAN,boolean,VALUES,,,^(true|false)$,,,,IDENTIFIER,,
TEXT,text,VALUES,,,"("")((?:[^""\\]|\\.)*)("")",,,,,,
ILLEGAL,,,,,(.),,,,,,ERROR
VARIABLE,name,,,,,FUNCTION LPAREN (IDENTIFIER) | VARIABLE COMMA (IDENTIFIER) | LET (IDENTIFIER) EQ,,,,,
CONDITION,,SEP,,,,IF (SUB_EXPRESSION),,,,,
PARAMETERS,,,,,,(LPAREN (?:VARIABLE (?:COMMA VARIABLE)*)? RPAREN) LBRACE,,,,,
FUNCTION_DECLARATION,,VALUES,,,,(?:FUNCTION)? VARIABLE (PARAMETERS (?:BLOCK_EXPRESSION | BLOCK_STATEMENT)) | (FUNCTION PARAMETERS (?:BLOCK_EXPRESSION | BLOCK_STATEMENT)),,RET,,,
INITIALIZATION,,SEP,,,,LET VARIABLE (EQ),,,,,
INDEX_LBRACKET,,,,,,(?:VALUES | RSEP) (LBRACKET),,,,,
TRUE_BRANCH,,,,,,CONDITION (STATEMENT | BLOCK_EXPRESSION | VALUE SEMICOLON ),,,,,
FALSE_BRANCH,,,,,,ELSE (STATEMENT | BLOCK_EXPRESSION | VALUE SEMICOLON ),,,,,
DECLARATION,void,STMT,,,,(LET VARIABLE (?:SEMICOLON | INITIALIZATION EXPRESSION (?:SEMICOLON)?) | FUNCTION VARIABLE FUNCTION_DECLARATION),,,,,
CALL_LPAREN,,,,,,(?:VALUES | RSEP) (LPAREN),,,,,
VALUE,,,,,,(?:^ | (?!VARIABLE FUNCTION_DECLARATION)[A-Z_]+) (VALUES),,,,,
INDEX_KEY,,OPS,,,,(INDEX_LBRACKET (?:VALUE | OPS)+ RBRACKET),,,VALUE,,
ARGUMENTS_EXPRESSION,,OPS,,,,(CALL_LPAREN (?:VALUE | OPS)* RPAREN),,,VALUE,,
IF_EXPRESSION,,VALUES,,,,(IF CONDITION TRUE_BRANCH (?:ELSE FALSE_BRANCH)?) (?!ELSE)(?=[A-Z_]+ | $),,,,,
BLOCK_EXPRESSION,,VALUES,,,,(LBRACE (?:STATEMENT)* (?:VALUE | EXPRESSION) RBRACE),,,,,
VALUE_STATEMENT,,STMT,,,,(VALUE) VALUE,,,,,
SUB_EXPRESSION,,VALUES,,,,(LPAREN (?:VALUE | OPS)+ RPAREN),,,VALUE,,
ARRAY_EXPRESSION,,VALUES,,,,(LBRACKET (?:VALUE | OPS)+ RBRACKET),,,VALUE,,
HASH_EXPRESSION,,VALUES,,,,(LBRACE (?:VALUE | OPS)+ COLON (?:VALUE | OPS)+ RBRACE),,,VALUE,,
EXPRESSION,,,,,,(?:^ | SEP | LSEP) ((?:VALUE | OPS)+) (?:RSEP | SEP | $),,,VALUE,,
ARGUMENTS,,,,,,(CALL_LPAREN (?:VALUE (?:COMMA VALUE)*)? RPAREN),,,,VALUE,
ARRAY,,,,,,(LBRACKET (?:VALUE (?:COMMA VALUE)*)? RBRACKET),,,,VALUE,
HASH,,,,,,(LBRACE (?:VALUE (?:COMMA VALUE)*)? RBRACE),,,,VALUE,
KEY,,,,,,(INDEX_LBRACKET VALUE RBRACKET),,,,VALUE,
INDEX,,,,,,(VALUE INDEX_KEY),,,,VALUE,
GET,,,,,,(VALUE DOT VALUE),,,,VALUE,
CALL,,,,,,(VALUE ARGUMENTS_EXPRESSION),,,,VALUE,
GROUP,,,,,,(?:^ | OPS) (LPAREN VALUE RPAREN),,,,VALUE,
NOT,,,PREFIX,,,(BANG VALUE),,,,VALUE,
UNARY_MINUS,,,PREFIX,,,(?:^ | (?!(?:VALUE | RPAREN))[A-Z_]+) (MINUS VALUE),,,,VALUE,
DIVIDE,,,PRODUCT,,,(VALUE SLASH VALUE),,,,VALUE,
MULTIPLY,,,PRODUCT,,,(VALUE ASTERISK VALUE),,,,VALUE,
ADD,,,SUM,,,(VALUE PLUS VALUE),,,,VALUE,
SUBTRACT,,,SUM,,,(VALUE MINUS VALUE),,,,VALUE,
GREATER_THAN,,,LESSGREATER,,,(VALUE GT VALUE),,,,VALUE,
LESS_THAN,,,LESSGREATER,,,(VALUE LT VALUE),,,,VALUE,
EQUAL,,,EQUALS,,,(VALUE EQ_EQ VALUE),,,,VALUE,
NOT_EQUAL,,,EQUALS,,,(VALUE BANG_EQ VALUE),,,,VALUE,
HASH_PAIR,,,,,,(VALUE COLON VALUE),,,,VALUE,
INVALID_EXPRESSION,,,,,,^(?!VALUE$)((?:[A-Z_]+)+)$,,,,VALUE,ERROR
RETURN_STATEMENT,,STMT,,,,(RETURN (?:EXPRESSION (?:SEMICOLON)? | SEMICOLON)),,,,,
BLOCK_STATEMENT,,STMT,,,,(LBRACE (?:STATEMENT)* RBRACE),,,,,
EXPRESSION_STATEMENT,,STMT,,,,(EXPRESSION (?:SEMICOLON)?),,,,,
STATEMENT,,SEP,,,,(STMT),,,,,
STATEMENTS,,,,,,((?:STATEMENT)+ (?:EXPRESSION)? | EXPRESSION),,,,,
UNPARSEABLE,,,,,,(?!STATEMENTS | UNPARSEABLE | PROGRAM)([A-Z_]+),,,,,ERROR
PROGRAM,,,,,,((?:STATEMENTS | UNPARSEABLE)+),,RET,,,
