language,nodetype,primitivetype,nodegroup,literal,literalpattern,nodepattern,prologue,epilogue,growfrom,growinto,nodeseverity,precedence
monkey,SOURCE_CODE,,,,,,,,,,,
monkey,ALLOCA,void,,,,,,,,,,
monkey,RET,void,,,,,,,,,,
monkey,FUNCTION_LABEL,,,,,,,,,,,
monkey,ARGS,,,,,,,,,,,
monkey,EQ,,,=,,,,,,,,
monkey,PLUS,,OPS,+,,,,,,,,
monkey,MINUS,,OPS,-,,,,,,,,
monkey,BANG,,OPS,!,,,,,,,,
monkey,ASTERISK,,OPS,*,,,,,,,,
monkey,PERCENT,,OPS,%,,,,,,,,
monkey,SLASH,,OPS,/,,,,,,,,
monkey,LT,,OPS,<,,,,,,,,
monkey,GT,,OPS,>,,,,,,,,
monkey,EQ_EQ,,OPS,==,,,,,,,,
monkey,BANG_EQ,,OPS,!=,,,,,,,,
monkey,COMMA,,,",",,,,,,,,
monkey,SEMICOLON,,,;,,,,,,,,
monkey,COLON,,,:,,,,,,,,
monkey,LPAREN,,,(,,,,,,,,
monkey,RPAREN,,,),,,,,,,,
monkey,LBRACE,,,{,,,,,,,,
monkey,RBRACE,,,},,,,,,,,
monkey,LBRACKET,,,[,,,,,,,,
monkey,RBRACKET,,,],,,,,,,,
monkey,WHITE_SPACE,,,,(\s+),,,,,,,
monkey,IDENTIFIER,name,VALUE,,([a-zA-Z_]+),,,,,,,
monkey,IF,,,,^(if)$,,,,IDENTIFIER,,,
monkey,ELSE,,,,^(else)$,,,,IDENTIFIER,,,
monkey,FUNCTION,,,,^(fn)$,,,,IDENTIFIER,,,
monkey,LOOP,,,,^(loop)$,,,,IDENTIFIER,,,
monkey,LET,,,,^(let)$,,,,IDENTIFIER,,,
monkey,RETURN,,,,^(return)$,,,,IDENTIFIER,,,
monkey,BOOLEAN,boolean,VALUE,,^(true|false)$,,,,IDENTIFIER,,,
monkey,NUMERIC,numeric,VALUE,,([0-9]+\.[0-9]+),,,,,,,
monkey,INTEGER,integer,VALUE,,([0-9]+),,,,,,,
monkey,TEXT,text,VALUE,,"""((?:[^""\\]|\\.)*)""",,,,,,,
monkey,ILLEGAL,,,,(.),,,,,,ERROR,
monkey,FUNCTION_NAME,,CALL,,,(?:^| )(IDENTIFIER\d+) LPAREN\d+,,,,,,
monkey,VARIABLE,name,,,,(?:^| )(?:FUNCTION\d+ LPAREN\d+ |VARIABLE\d+ COMMA\d+ |(?=LET\d+ IDENTIFIER\d+ EQ\d+)LET\d+ )(IDENTIFIER\d+) (?:EQ|COMMA|RPAREN)\d+,,,,,,
monkey,STORE_ARGS,,,,,(?:^| )FUNCTION\d+ (LPAREN\d+(?: VARIABLE\d+(?: COMMA\d+ VARIABLE\d+)*)? RPAREN\d+),,,,,,
monkey,FUNCTION_DECLARATION,void,VALUE,,,(?:^| )(FUNCTION\d+ STORE_ARGS\d+ BLOCK_(?:EXPRESSION|STATEMENT)\d+),ALLOCA,RET,,,,
monkey,ANONYMOUS_FUNCTION,,CALL,,,(?:^| )(FUNCTION_DECLARATION\d+) LPAREN\d+,,,,,,
monkey,INDEX,,VALUE,,,(?:^| )((?:VALUE|ARRAY|HASH)\d+ LBRACKET\d+ (?:VALUE|EXPRESSION)\d+ RBRACKET\d+),,,,,,
monkey,HASH_PAIR,,,,,(?:^| )(?:LBRACE\d+ |HASH_PAIR\d+ COMMA\d+ )((?:VALUE|EXPRESSION)\d+ COLON\d+ (?:VALUE|EXPRESSION)\d+) (?:COMMA|RBRACE)\d+,,,,,,
monkey,HASH,,VALUE,,,(?:^|(?:^| )(?!RBRACKET\d+ )[A-Z_]+\d+ )(LBRACE\d+(?: HASH_PAIR\d+(?: COMMA\d+ HASH_PAIR\d+)*)? RBRACE\d+),,,,,,
monkey,ARRAY,,VALUE,,,(?:^|(?:^| )(?!(?:RBRACKET|VALUE)\d+ )[A-Z_]+\d+ )(LBRACKET\d+(?: (?:VALUE|EXPRESSION)\d+(?: COMMA\d+ (?:VALUE|EXPRESSION)\d+)*)? RBRACKET\d+),,,,,,
monkey,CONDITION,,,,,IF\d+ (SUB_EXPRESSION\d+),,,,,,
monkey,TRUE_BRANCH,,,,,CONDITION\d+ (BLOCK_EXPRESSION\d+),,,,,,
monkey,FALSE_BRANCH,,,,,ELSE\d+ (BLOCK_EXPRESSION\d+|IF_EXPRESSION\d+),,,,,,
monkey,IF_EXPRESSION,,VALUE,,,(?:^| )(IF\d+ CONDITION\d+ TRUE_BRANCH\d+(?: ELSE\d+ FALSE_BRANCH\d+)?)(?! ELSE\d+)(?= [A-Z_]+|$),,,,,,
monkey,VALUE,,,,,(?:^| )((?#VALUE)\d+)(?! EQ\d+)(?: |$),,,,,,
monkey,BLOCK_EXPRESSION,,VALUE,,,(?:^| )(LBRACE\d+(?: EXPRESSION_STATEMENT\d+)*(?: EXPRESSION\d+)? RBRACE\d+),,,,,,
monkey,LOOP_EXPRESSION,,VALUE,,,(?:^| )(LOOP\d+ BLOCK_(?:EXPRESSION|STATEMENT)\d+),,,,,,
monkey,CALL_EXPRESSION,,VALUE,,,(?:^| )((?#CALL)\d+ LPAREN\d+(?: VALUE\d+| (?#OPS)\d+| COMMA\d+)* RPAREN\d+),,,VALUE,,,
monkey,SUB_EXPRESSION,,VALUE,,,(?:^|(?:^| )(?#OPS)\d+ |IF\d+ |COMMA\d+ )(LPAREN\d+ (?:VALUE\d+|(?#OPS)\d+)(?: (?:VALUE\d+|(?#OPS)\d+))* RPAREN\d+),,,VALUE,,,
monkey,EXPRESSION,,,,,(?:^|(?:^| )(?:SEMICOLON\d+ |LBRACE\d+ |LBRACKET\d+ |EQ\d+ |RETURN\d+ |COMMA\d+ |COLON\d+ ))((?:VALUE\d+|(?#OPS)\d+)(?: (?:VALUE\d+|(?#OPS)\d+))*)(?: SEMICOLON\d+| RBRACE\d+| RBRACKET\d+| COMMA\d+| COLON\d+|$),,,VALUE,,,
monkey,CALL,,,,,(?:^| )((?#CALL)\d+ LPAREN\d+(?: VALUE\d+(?: COMMA\d+ VALUE\d+)*)? RPAREN\d+),,,,VALUE,,
monkey,GROUP,,,,,(?:^|(?#OPS)\d+ )(LPAREN\d+ VALUE\d+ RPAREN\d+),,,,VALUE,,
monkey,UNARY_MINUS,,,,,(?:^|(?:^| )(?!(?:VALUE|RPAREN)\d+ )[A-Z_]+\d+ )(MINUS\d+ VALUE\d+),,,,VALUE,,PREFIX
monkey,NOT,,,,,(?:^| )(BANG\d+ VALUE\d+),,,,VALUE,,PREFIX
monkey,DIVIDE,,,,,(?:^| )(VALUE\d+ SLASH\d+ VALUE\d+),,,,VALUE,,PRODUCT
monkey,MULTIPLY,,,,,(?:^| )(VALUE\d+ ASTERISK\d+ VALUE\d+),,,,VALUE,,PRODUCT
monkey,ADD,,,,,(?:^| )(VALUE\d+ PLUS\d+ VALUE\d+),,,,VALUE,,SUM
monkey,SUBTRACT,,,,,(?:^| )(VALUE\d+ MINUS\d+ VALUE\d+),,,,VALUE,,SUM
monkey,LESS_THAN,,,,,(?:^| )(VALUE\d+ LT\d+ VALUE\d+),,,,VALUE,,LESSGREATER
monkey,GREATER_THAN,,,,,(?:^| )(VALUE\d+ GT\d+ VALUE\d+),,,,VALUE,,LESSGREATER
monkey,EQUAL,,,,,(?:^| )(VALUE\d+ EQ_EQ\d+ VALUE\d+),,,,VALUE,,EQUALS
monkey,NOT_EQUAL,,,,,(?:^| )(VALUE\d+ BANG_EQ\d+ VALUE\d+),,,,VALUE,,EQUALS
monkey,INVALID_EXPRESSION,,,,,^(?!VALUE\d+$)([A-Z_]+\d+(?: [A-Z_]+\d+)*)$,,,,VALUE,ERROR,
monkey,IF_STATEMENT,void,STATEMENT,,,(?:^| )(IF\d+ CONDITION\d+ BLOCK_STATEMENT\d+(?: ELSE\d+ BLOCK_STATEMENT\d+)?)(?! ELSE\d+)(?= [A-Z_]+|$),,,,,,
monkey,LET_STATEMENT,void,STATEMENT,,,(?:^| )(LET\d+ VARIABLE\d+ EQ\d+ EXPRESSION\d+ SEMICOLON\d+),,,,,,
monkey,ASSIGNMENT_STATEMENT,void,STATEMENT,,,(?:^| )(IDENTIFIER\d+ EQ\d+ EXPRESSION\d+ SEMICOLON\d+),,,,,,
monkey,RETURN_STATEMENT,,STATEMENT,,,(?:^| )(RETURN\d+ EXPRESSION\d+ SEMICOLON\d+),,,,,,
monkey,EXPRESSION_STATEMENT,,STATEMENT,,,(?:^| )(EXPRESSION\d+ SEMICOLON\d+),,,,,,
monkey,BLOCK_STATEMENT,,,,,(?:^| )(LBRACE\d+(?: STATEMENT\d+)* RBRACE\d+),,,,,,
monkey,STATEMENT,,,,,(?:^| )((?#STATEMENT)\d+),,,,,,
monkey,STATEMENTS,,,,,(?:^| )(STATEMENT\d+(?: STATEMENT\d+)*(?: EXPRESSION\d+)?|EXPRESSION\d+),,,,,,
monkey,UNPARSEABLE,,,,,(?:^| )(?!STATEMENTS\d+|UNPARSEABLE\d+|PROGRAM\d+)([A-Z_]+\d+),,,,,ERROR,
monkey,PROGRAM,,,,,(?:^| )((?:STATEMENTS\d+|UNPARSEABLE\d+)(?: (?:STATEMENTS\d+|UNPARSEABLE\d+))*),ALLOCA,RET,,,,
