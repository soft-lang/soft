nodetype,primitivetype,nodegroup,precedence,literal,literalpattern,nodepattern,prologue,epilogue,growfrom,growinto,nodeseverity
ALLOCA,void,,,,,,,,,,
RET,void,,,,,,,,,,
SOURCE_CODE,text,,,,,,,,,,
BANG_EQ,,OPS,,!=,,,,,,,
EQ_EQ,,OPS,,==,,,,,,,
BANG,,OPS,,!,,,,,,,
PERCENT,,OPS,,%,,,,,,,
ASTERISK,,OPS,,*,,,,,,,
PLUS,,OPS,,+,,,,,,,
MINUS,,OPS,,-,,,,,,,
SLASH,,OPS,,/,,,,,,,
LT,,OPS,,<,,,,,,,
GT,,OPS,,>,,,,,,,
LPAREN,,,,(,,,,,,,
RPAREN,,,,),,,,,,,
COMMA,,,,",",,,,,,,
COLON,,,,:,,,,,,,
SEMICOLON,,,,;,,,,,,,
EQ,,,,=,,,,,,,
LBRACKET,,,,[,,,,,,,
RBRACKET,,,,],,,,,,,
LBRACE,,,,{,,,,,,,
RBRACE,,,,},,,,,,,
WHITE_SPACE,,,,,(\s+),,,,,,
IDENTIFIER,name,VALUE,,,([a-zA-Z_]+),,,,,,
IF,,,,,^(if)$,,,,IDENTIFIER,,
ELSE,,,,,^(else)$,,,,IDENTIFIER,,
FUNCTION,,,,,^(fn)$,,,,IDENTIFIER,,
LET,,,,,^(let)$,,,,IDENTIFIER,,
RETURN,,,,,^(return)$,,,,IDENTIFIER,,
BOOLEAN,boolean,VALUE,,,^(true|false)$,,,,IDENTIFIER,,
INTEGER,integer,VALUE,,,([0-9]+),,,,,,
TEXT,text,VALUE,,,"""((?:[^""\\]|\\.)*)""",,,,,,
ILLEGAL,,,,,(.),,,,,,ERROR
FUNCTION_NAME,,CALL,,,,(?:^| )(IDENTIFIER) LPAREN,,,,,
VARIABLE,name,,,,,(?:^| )(?:FUNCTION LPAREN |VARIABLE COMMA |(?=LET IDENTIFIER EQ)LET )(IDENTIFIER) (?:EQ|COMMA|RPAREN),,,,,
ARGUMENTS,,,,,,(?:^| )FUNCTION (LPAREN(?: VARIABLE(?: COMMA VARIABLE)*)? RPAREN),,,,,
FUNCTION_DECLARATION,void,VALUE,,,,(?:^| )(FUNCTION ARGUMENTS (?:BLOCK_EXPRESSION|BLOCK_STATEMENT)),ALLOCA,RET,,,
ANONYMOUS_FUNCTION,,CALL,,,,(?:^| )(FUNCTION_DECLARATION) LPAREN,,,,,
INDEX,,VALUE,,,,(?:^| )((?:VALUE|ARRAY|HASH) LBRACKET (?:VALUE|EXPRESSION) RBRACKET),,,,,
HASH_PAIR,,,,,,(?:^| )(?:LBRACE |HASH_PAIR COMMA )((?:VALUE|EXPRESSION) COLON (?:VALUE|EXPRESSION)) (?:COMMA|RBRACE),,,,,
HASH,,VALUE,,,,(?:^|(?:^| )(?!RBRACKET )[A-Z_]+ )(LBRACE(?: HASH_PAIR(?: COMMA HASH_PAIR)*)? RBRACE),,,,,
ARRAY,,VALUE,,,,(?:^|(?:^| )(?!(?:RBRACKET|VALUE) )[A-Z_]+ )(LBRACKET(?: (?:VALUE|EXPRESSION)(?: COMMA (?:VALUE|EXPRESSION))*)? RBRACKET),,,,,
CONDITION,,,,,,(?:^| )IF (SUB_EXPRESSION),,,,,
TRUE_BRANCH,,,,,,(?:^| )CONDITION (BLOCK_EXPRESSION),,,,,
FALSE_BRANCH,,,,,,(?:^| )ELSE (BLOCK_EXPRESSION|IF_EXPRESSION),,,,,
IF_EXPRESSION,,VALUE,,,,(?:^| )(IF CONDITION TRUE_BRANCH(?: ELSE FALSE_BRANCH)?)(?! ELSE)(?= [A-Z_]+|$),,,,,
VALUE,,,,,,(?:^| )((?#VALUE))(?! EQ)(?: |$),,,,,
BLOCK_EXPRESSION,,VALUE,,,,(?:^| )(LBRACE(?: EXPRESSION_STATEMENT)*(?: EXPRESSION)? RBRACE),,,,,
CALL_EXPRESSION,,VALUE,,,,(?:^| )((?#CALL) LPAREN(?: VALUE| (?#OPS)| COMMA)* RPAREN),,,VALUE,,
SUB_EXPRESSION,,VALUE,,,,(?:^|(?:^| )(?#OPS) |IF |COMMA )(LPAREN (?:VALUE|(?#OPS))(?: (?:VALUE|(?#OPS)))* RPAREN),,,VALUE,,
EXPRESSION,,,,,,(?:^|(?:^| )(?:SEMICOLON |LBRACE |LBRACKET |EQ |RETURN |COMMA |COLON ))((?:VALUE|(?#OPS))(?: (?:VALUE|(?#OPS)))*)(?: SEMICOLON| RBRACE| RBRACKET| COMMA| COLON|$),,,VALUE,,
CALL,,,,,,(?:^| )((?#CALL) LPAREN(?: VALUE(?: COMMA VALUE)*)? RPAREN),,,,VALUE,
GROUP,,,,,,(?:^|(?#OPS) )(LPAREN VALUE RPAREN),,,,VALUE,
NOT,,,PREFIX,,,(?:^| )(BANG VALUE),,,,VALUE,
UNARY_MINUS,,,PREFIX,,,(?:^|(?:^| )(?!(?:VALUE|RPAREN) )[A-Z_]+ )(MINUS VALUE),,,,VALUE,
DIVIDE,,,PRODUCT,,,(?:^| )(VALUE SLASH VALUE),,,,VALUE,
MULTIPLY,,,PRODUCT,,,(?:^| )(VALUE ASTERISK VALUE),,,,VALUE,
ADD,,,SUM,,,(?:^| )(VALUE PLUS VALUE),,,,VALUE,
SUBTRACT,,,SUM,,,(?:^| )(VALUE MINUS VALUE),,,,VALUE,
GREATER_THAN,,,LESSGREATER,,,(?:^| )(VALUE GT VALUE),,,,VALUE,
LESS_THAN,,,LESSGREATER,,,(?:^| )(VALUE LT VALUE),,,,VALUE,
EQUAL,,,EQUALS,,,(?:^| )(VALUE EQ_EQ VALUE),,,,VALUE,
NOT_EQUAL,,,EQUALS,,,(?:^| )(VALUE BANG_EQ VALUE),,,,VALUE,
INVALID_EXPRESSION,,,,,,^(?!VALUE$)([A-Z_]+(?: [A-Z_]+)*)$,,,,VALUE,ERROR
IF_STATEMENT,void,STATEMENT,,,,(?:^| )(IF CONDITION BLOCK_STATEMENT(?: ELSE BLOCK_STATEMENT)?)(?! ELSE)(?= [A-Z_]+|$),,,,,
LET_STATEMENT,void,STATEMENT,,,,(?:^| )(LET VARIABLE EQ EXPRESSION SEMICOLON),,,,,
RETURN_STATEMENT,,STATEMENT,,,,(?:^| )(RETURN EXPRESSION(?: SEMICOLON|(?= RBRACE)|$)),,,,,
EXPRESSION_STATEMENT,,STATEMENT,,,,(?:^| )(EXPRESSION SEMICOLON),,,,,
BLOCK_STATEMENT,,,,,,(?:^| )(LBRACE(?: STATEMENT)* RBRACE),,,,,
STATEMENT,,,,,,(?:^| )((?#STATEMENT)),,,,,
STATEMENTS,,,,,,(?:^| )(STATEMENT(?: STATEMENT)*(?: EXPRESSION)?|EXPRESSION),,,,,
UNPARSEABLE,,,,,,(?:^| )(?!STATEMENTS|UNPARSEABLE|PROGRAM)([A-Z_]+),,,,,ERROR
PROGRAM,,,,,,(?:^| )((?:STATEMENTS|UNPARSEABLE)(?: (?:STATEMENTS|UNPARSEABLE))*),ALLOCA,RET,,,
