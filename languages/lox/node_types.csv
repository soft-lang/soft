nodetype,primitivetype,nodegroup,precedence,literal,literalpattern,nodepattern,prologue,epilogue,growfrom,growinto,nodeseverity
ALLOCA,void,,,,,,,,,,
RET,void,,,,,,,,,,
SOURCE_CODE,text,,,,,,,,,,
BANG_EQ,,OPS,,!=,,,,,,,
LT_EQ,,OPS,,<=,,,,,,,
EQ_EQ,,OPS,,==,,,,,,,
GT_EQ,,OPS,,>=,,,,,,,
BANG,,OPS,,!,,,,,,,
PERCENT,,OPS,,%,,,,,,,
ASTERISK,,OPS,,*,,,,,,,
PLUS,,OPS,,+,,,,,,,
COMMA,,OPS,,",",,,,,,,
MINUS,,OPS,,-,,,,,,,
DOT,,OPS,,.,,,,,,,
SLASH,,OPS,,/,,,,,,,
COLON,,OPS,,:,,,,,,,
LT,,OPS,,<,,,,,,,
EQ,,OPS,,=,,,,,,,
GT,,OPS,,>,,,,,,,
LPAREN,,,,(,,,,,,,
RPAREN,,,,),,,,,,,
SEMICOLON,,,,;,,,,,,,
LBRACKET,,,,[,,,,,,,
RBRACKET,,,,],,,,,,,
LBRACE,,,,{,,,,,,,
RBRACE,,,,},,,,,,,
WHITE_SPACE,,,,,(\s+),,,,,,
IDENTIFIER,name,VALUE,,,([a-zA-Z_]+),,,,,,
IF,,,,,^(if)$,,,,IDENTIFIER,,
ELSE,,,,,^(else)$,,,,IDENTIFIER,,
FUNCTION,,,,,^(fn)$,,,,IDENTIFIER,,
LET,,,,,^(var)$,,,,IDENTIFIER,,
RETURN,,,,,^(return)$,,,,IDENTIFIER,,
BOOLEAN,boolean,VALUE,,,^(true|false)$,,,,IDENTIFIER,,
INTEGER,integer,VALUE,,,([0-9]+),,,,,,
TEXT,text,VALUE,,,"""((?:[^""\\]|\\.)*)""",,,,,,
ILLEGAL,,,,,(.),,,,,,ERROR
AND,,OPS,,,^(and)$,,,,IDENTIFIER,,
CLASS,,,,,^(class)$,,,,IDENTIFIER,,
FOR,,,,,^(for)$,,,,IDENTIFIER,,
FUN,,,,,^(fun)$,,,,IDENTIFIER,,
NIL,nil,VALUE,,,^(nil)$,,,,IDENTIFIER,,
OR,,OPS,,,^(or)$,,,,IDENTIFIER,,
PRINT,,,,,^(print)$,,,,IDENTIFIER,,
SUPER,,,,,^(super)$,,,,IDENTIFIER,,
THIS,,,,,^(this)$,,,,IDENTIFIER,,
WHILE,,,,,^(while)$,,,,IDENTIFIER,,
FUNCTION_NAME,,CALL,,,,(?:^| )(IDENTIFIER) LPAREN,,,,,
VARIABLE,name,VALUE,,,,(?:^| )(?:FUNCTION LPAREN |VARIABLE COMMA |(?=LET IDENTIFIER EQ)LET )(IDENTIFIER) (?:EQ|COMMA|RPAREN),,,,,
ARGUMENTS,,,,,,(?:^| )FUNCTION (LPAREN(?: VARIABLE(?: COMMA VARIABLE)*)? RPAREN),,,,,
FUNCTION_DECLARATION,void,VALUE,,,,(?:^| )(FUNCTION ARGUMENTS BLOCK_STATEMENT),ALLOCA,RET,,,
ANONYMOUS_FUNCTION,,CALL,,,,(?:^| )(FUNCTION_DECLARATION) LPAREN,,,,,
VARIABLE_DECLARATION,,,,,,(?:^| )(LET VARIABLE EQ),,,,,
INDEX_LOOKUP,,,,,,(?:^| )((?#VALUE)) LBRACKET,,,,,
CONDITION,,,,,,(?:^| )IF (SUB_EXPRESSION),,,,,
TRUE_BRANCH,,,,,,(?:^| )CONDITION (STATEMENT),,,,,
FALSE_BRANCH,,,,,,(?:^| )ELSE (STATEMENT|IF_EXPRESSION),,,,,
VALUE,,,,,,(?:^| )((?#VALUE)),,,,,
HASH_EXPRESSION,,VALUE,,,,(?:^| )(LBRACE RBRACE|LBRACE(?: (?:VALUE|(?#OPS)))+ COLON(?: (?:VALUE|(?#OPS)))+ RBRACE),,,VALUE,,
ARRAY_EXPRESSION,,VALUE,,,,(?:^|(?:^| )(?!INDEX_LOOKUP )[A-Z_]+ )(LBRACKET(?: (?:VALUE|(?#OPS)))* RBRACKET),,,VALUE,,
INDEX_EXPRESSION,,VALUE,,,,(?:^| )(INDEX_LOOKUP LBRACKET (?:VALUE|(?#OPS))(?: (?:VALUE|(?#OPS)))* RBRACKET),,,VALUE,,
CALL_EXPRESSION,,VALUE,,,,(?:^| )((?#CALL) LPAREN(?: VALUE| (?#OPS))* RPAREN),,,VALUE,,
SUB_EXPRESSION,,VALUE,,,,(?:^| )(LPAREN (?:VALUE|(?#OPS))(?: (?:VALUE|(?#OPS)))* RPAREN),,,VALUE,,
IF_EXPRESSION,,VALUE,,,,(?:^| )(IF CONDITION TRUE_BRANCH(?: ELSE FALSE_BRANCH)?)(?! ELSE)(?= [A-Z_]+|$),,,,,
EXPRESSION,,,,,,(?:^| )((?:VALUE|(?#OPS))(?: (?:VALUE|(?#OPS)))*),,,VALUE,,
HASH,,,,,,(?:^| )(LBRACE(?: VALUE(?: COMMA VALUE)*)? RBRACE),,,,VALUE,
ARRAY,,,,,,(?:^|(?:^| )(?!INDEX_LOOKUP )[A-Z_]+ )(LBRACKET(?: VALUE(?: COMMA VALUE)*)? RBRACKET),,,,VALUE,
INDEX,,,,,,(?:^| )(INDEX_LOOKUP LBRACKET VALUE RBRACKET),,,,VALUE,
CALL,,,,,,(?:^| )((?#CALL) LPAREN(?: VALUE(?: COMMA VALUE)*)? RPAREN),,,,VALUE,
GROUP,,,,,,(?:^|(?#OPS) )(LPAREN VALUE RPAREN),,,,VALUE,
NOT,,,PREFIX,,,(?:^| )(BANG VALUE),,,,VALUE,
UNARY_MINUS,,,PREFIX,,,(?:^|(?:^| )(?!(?:VALUE|RPAREN) )[A-Z_]+ )(MINUS VALUE),,,,VALUE,
DIVIDE,,,PRODUCT,,,(?:^| )(VALUE SLASH VALUE),,,,VALUE,
MULTIPLY,,,PRODUCT,,,(?:^| )(VALUE ASTERISK VALUE),,,,VALUE,
ADD,,,SUM,,,(?:^| )(VALUE PLUS VALUE),,,,VALUE,
SUBTRACT,,,SUM,,,(?:^| )(VALUE MINUS VALUE),,,,VALUE,
GREATER_THAN,,,LESSGREATER,,,(?:^| )(VALUE GT VALUE),,,,VALUE,
GREATER_THAN_OR_EQUAL_TO,,,LESSGREATER,,,(?:^| )(VALUE GT_EQ VALUE),,,,VALUE,
LESS_THAN,,,LESSGREATER,,,(?:^| )(VALUE LT VALUE),,,,VALUE,
LESS_THAN_OR_EQUAL_TO,,,LESSGREATER,,,(?:^| )(VALUE LT_EQ VALUE),,,,VALUE,
EQUAL,,,EQUALS,,,(?:^| )(VALUE EQ_EQ VALUE),,,,VALUE,
NOT_EQUAL,,,EQUALS,,,(?:^| )(VALUE BANG_EQ VALUE),,,,VALUE,
LOGICAL_AND,,,,,,(?:^| )(VALUE AND VALUE),,,,VALUE,
LOGICAL_OR,,,,,,(?:^| )(VALUE OR VALUE),,,,VALUE,
ASSIGNMENT,,,,,,(?:^| )(VALUE EQ VALUE)(?: RPAREN|$),,,,VALUE,
HASH_PAIR,,,,,,(?:^| )(VALUE COLON VALUE),,,,VALUE,
INVALID_EXPRESSION,,,,,,^(?!VALUE$)([A-Z_]+(?: [A-Z_]+)*)$,,,,VALUE,ERROR
LET_STATEMENT,void,STATEMENT,,,,(?:^| )(VARIABLE_DECLARATION EXPRESSION(?: SEMICOLON)?),,,,,
RETURN_STATEMENT,,STATEMENT,,,,(?:^| )(RETURN EXPRESSION(?: SEMICOLON)?),,,,,
PRINT_STATEMENT,,STATEMENT,,,,(?:^| )(PRINT EXPRESSION(?: SEMICOLON)?),,,,,
EXPRESSION_STATEMENT,,STATEMENT,,,,(?:^| )(EXPRESSION(?: SEMICOLON)?),,,,,
BLOCK_STATEMENT,,STATEMENT,,,,(?:^| )(LBRACE(?: STATEMENT)* RBRACE),,,,,
STATEMENT,,,,,,(?:^| )((?#STATEMENT)),,,,,
STATEMENTS,,,,,,(?:^| )(STATEMENT(?: STATEMENT)*(?: EXPRESSION)?|EXPRESSION),,,,,
UNPARSEABLE,,,,,,(?:^| )(?!STATEMENTS|UNPARSEABLE|PROGRAM)([A-Z_]+),,,,,ERROR
PROGRAM,,,,,,(?:^| )((?:STATEMENTS|UNPARSEABLE)(?: (?:STATEMENTS|UNPARSEABLE))*),ALLOCA,RET,,,
